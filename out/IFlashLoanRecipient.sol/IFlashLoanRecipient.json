{"abi":[{"type":"function","name":"receiveFlashLoan","inputs":[{"name":"tokens","type":"address[]","internalType":"contract IERC20[]"},{"name":"amounts","type":"uint256[]","internalType":"uint256[]"},{"name":"feeAmounts","type":"uint256[]","internalType":"uint256[]"},{"name":"userData","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"receiveFlashLoan(address[],uint256[],uint256[],bytes)":"f04f2707"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"feeAmounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"name\":\"receiveFlashLoan\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"receiveFlashLoan(address[],uint256[],uint256[],bytes)\":{\"details\":\"When `flashLoan` is called on the Vault, it invokes the `receiveFlashLoan` hook on the recipient. At the time of the call, the Vault will have transferred `amounts` for `tokens` to the recipient. Before this call returns, the recipient must have transferred `amounts` plus `feeAmounts` for each token back to the Vault, or else the entire flash loan will revert. `userData` is the same value passed in the `IVault.flashLoan` call.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@balancer-labs/v2-interfaces/contracts/vault/IFlashLoanRecipient.sol\":\"IFlashLoanRecipient\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@balancer-labs/=node_modules/@balancer-labs/\",\":@crytic/=node_modules/@crytic/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":@prb/=node_modules/@prb/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":forge-std/=node_modules/forge-std/\",\":hardhat/=node_modules/hardhat/\",\":solady/=node_modules/solady/\",\":solmate/=node_modules/solmate/\"]},\"sources\":{\"node_modules/@balancer-labs/v2-interfaces/contracts/solidity-utils/openzeppelin/IERC20.sol\":{\"keccak256\":\"0x3c415102b8b53a3efe0209b7fa4fd052a48b35a1df99e1b37572597d25030249\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8aac0d9f5ff03e0edeb07e1c400b78edea5948acff7e113ba52fd32f86cad72d\",\"dweb:/ipfs/Qmbh6C53fCjvjoHEVZHNadpRq5KZJzfHpDeR3qYfPgKvZt\"]},\"node_modules/@balancer-labs/v2-interfaces/contracts/vault/IFlashLoanRecipient.sol\":{\"keccak256\":\"0xadcf6e9f8677de9ec51a1bbb419da349b7c0c17af8b8cddad85ee0e80107036e\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://e9b30c1b15e3d0990a4a343fac14d2263c4bae4c3bdbeb38489103b4f6f66c39\",\"dweb:/ipfs/QmeQjBDidkLAoq4nknwPPPmunSTvQEZ9shaAhPiJAPmbk6\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.19+commit.7dd6d404"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"contract IERC20[]","name":"tokens","type":"address[]"},{"internalType":"uint256[]","name":"amounts","type":"uint256[]"},{"internalType":"uint256[]","name":"feeAmounts","type":"uint256[]"},{"internalType":"bytes","name":"userData","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"receiveFlashLoan"}],"devdoc":{"kind":"dev","methods":{"receiveFlashLoan(address[],uint256[],uint256[],bytes)":{"details":"When `flashLoan` is called on the Vault, it invokes the `receiveFlashLoan` hook on the recipient. At the time of the call, the Vault will have transferred `amounts` for `tokens` to the recipient. Before this call returns, the recipient must have transferred `amounts` plus `feeAmounts` for each token back to the Vault, or else the entire flash loan will revert. `userData` is the same value passed in the `IVault.flashLoan` call."}},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"remappings":["@balancer-labs/=node_modules/@balancer-labs/","@crytic/=node_modules/@crytic/","@openzeppelin/=node_modules/@openzeppelin/","@prb/=node_modules/@prb/","eth-gas-reporter/=node_modules/eth-gas-reporter/","forge-std/=node_modules/forge-std/","hardhat/=node_modules/hardhat/","solady/=node_modules/solady/","solmate/=node_modules/solmate/"],"optimizer":{"enabled":false,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"node_modules/@balancer-labs/v2-interfaces/contracts/vault/IFlashLoanRecipient.sol":"IFlashLoanRecipient"},"evmVersion":"paris","libraries":{}},"sources":{"node_modules/@balancer-labs/v2-interfaces/contracts/solidity-utils/openzeppelin/IERC20.sol":{"keccak256":"0x3c415102b8b53a3efe0209b7fa4fd052a48b35a1df99e1b37572597d25030249","urls":["bzz-raw://8aac0d9f5ff03e0edeb07e1c400b78edea5948acff7e113ba52fd32f86cad72d","dweb:/ipfs/Qmbh6C53fCjvjoHEVZHNadpRq5KZJzfHpDeR3qYfPgKvZt"],"license":"MIT"},"node_modules/@balancer-labs/v2-interfaces/contracts/vault/IFlashLoanRecipient.sol":{"keccak256":"0xadcf6e9f8677de9ec51a1bbb419da349b7c0c17af8b8cddad85ee0e80107036e","urls":["bzz-raw://e9b30c1b15e3d0990a4a343fac14d2263c4bae4c3bdbeb38489103b4f6f66c39","dweb:/ipfs/QmeQjBDidkLAoq4nknwPPPmunSTvQEZ9shaAhPiJAPmbk6"],"license":"GPL-3.0-or-later"}},"version":1},"ast":{"absolutePath":"node_modules/@balancer-labs/v2-interfaces/contracts/vault/IFlashLoanRecipient.sol","id":46793,"exportedSymbols":{"IERC20":[46753],"IFlashLoanRecipient":[46792]},"nodeType":"SourceUnit","src":"688:853:57","nodes":[{"id":46774,"nodeType":"PragmaDirective","src":"688:31:57","nodes":[],"literals":["solidity",">=","0.7",".0","<","0.9",".0"]},{"id":46775,"nodeType":"ImportDirective","src":"773:51:57","nodes":[],"absolutePath":"node_modules/@balancer-labs/v2-interfaces/contracts/solidity-utils/openzeppelin/IERC20.sol","file":"../solidity-utils/openzeppelin/IERC20.sol","nameLocation":"-1:-1:-1","scope":46793,"sourceUnit":46754,"symbolAliases":[],"unitAlias":""},{"id":46792,"nodeType":"ContractDefinition","src":"826:714:57","nodes":[{"id":46791,"nodeType":"FunctionDefinition","src":"1363:175:57","nodes":[],"documentation":{"id":46776,"nodeType":"StructuredDocumentation","src":"862:496:57","text":" @dev When `flashLoan` is called on the Vault, it invokes the `receiveFlashLoan` hook on the recipient.\n At the time of the call, the Vault will have transferred `amounts` for `tokens` to the recipient. Before this\n call returns, the recipient must have transferred `amounts` plus `feeAmounts` for each token back to the\n Vault, or else the entire flash loan will revert.\n `userData` is the same value passed in the `IVault.flashLoan` call."},"functionSelector":"f04f2707","implemented":false,"kind":"function","modifiers":[],"name":"receiveFlashLoan","nameLocation":"1372:16:57","parameters":{"id":46789,"nodeType":"ParameterList","parameters":[{"constant":false,"id":46780,"mutability":"mutable","name":"tokens","nameLocation":"1414:6:57","nodeType":"VariableDeclaration","scope":46791,"src":"1398:22:57","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$46753_$dyn_memory_ptr","typeString":"contract IERC20[]"},"typeName":{"baseType":{"id":46778,"nodeType":"UserDefinedTypeName","pathNode":{"id":46777,"name":"IERC20","nameLocations":["1398:6:57"],"nodeType":"IdentifierPath","referencedDeclaration":46753,"src":"1398:6:57"},"referencedDeclaration":46753,"src":"1398:6:57","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$46753","typeString":"contract IERC20"}},"id":46779,"nodeType":"ArrayTypeName","src":"1398:8:57","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$46753_$dyn_storage_ptr","typeString":"contract IERC20[]"}},"visibility":"internal"},{"constant":false,"id":46783,"mutability":"mutable","name":"amounts","nameLocation":"1447:7:57","nodeType":"VariableDeclaration","scope":46791,"src":"1430:24:57","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":46781,"name":"uint256","nodeType":"ElementaryTypeName","src":"1430:7:57","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":46782,"nodeType":"ArrayTypeName","src":"1430:9:57","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":46786,"mutability":"mutable","name":"feeAmounts","nameLocation":"1481:10:57","nodeType":"VariableDeclaration","scope":46791,"src":"1464:27:57","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":46784,"name":"uint256","nodeType":"ElementaryTypeName","src":"1464:7:57","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":46785,"nodeType":"ArrayTypeName","src":"1464:9:57","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":46788,"mutability":"mutable","name":"userData","nameLocation":"1514:8:57","nodeType":"VariableDeclaration","scope":46791,"src":"1501:21:57","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":46787,"name":"bytes","nodeType":"ElementaryTypeName","src":"1501:5:57","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1388:140:57"},"returnParameters":{"id":46790,"nodeType":"ParameterList","parameters":[],"src":"1537:0:57"},"scope":46792,"stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"abstract":false,"baseContracts":[],"canonicalName":"IFlashLoanRecipient","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"linearizedBaseContracts":[46792],"name":"IFlashLoanRecipient","nameLocation":"836:19:57","scope":46793,"usedErrors":[]}],"license":"GPL-3.0-or-later"},"id":57}